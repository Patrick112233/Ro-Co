# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main", "9-mvp" ]
  pull_request:
    branches: [ "main" ]

jobs:

  testAPI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Execute test via Maven
        run: mvn -B test --file restAPI/pom.xml

      # Add JaCoCo code coverage to the workflow
      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v5.0
        with:
          coverage_results_path: restAPI/target/site/jacoco/jacoco.xml
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: false
          minimum_coverage: 80
          fail_below_threshold: false
          publish_only_summary: false
      - name: Add Jacocoo report to workflow run summary
        run: |
          echo "| Outcome | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| Code Coverage % | ${{ steps.jacoco_reporter.outputs.coverage_percentage }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :heavy_check_mark: Number of Lines Covered | ${{ steps.jacoco_reporter.outputs.covered_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :x: Number of Lines Missed | ${{ steps.jacoco_reporter.outputs.missed_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Total Number of Lines | ${{ steps.jacoco_reporter.outputs.total_lines }} |" >> $GITHUB_STEP_SUMMARY

      # uploads the coverage-report.html artifact
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: jacoco-report/jacoco-report.html
          retention-days: 10


  integrationTestAPI:
    runs-on: ubuntu-latest
    needs: [testAPI]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: GnerateKeyStore
        run: |
            keytool -genkeypair -alias RoCoTLS -storetype PKCS12 -keyalg RSA -keystore restAPI/src/main/resources/certs/RoCoTLS.p12 -storepass 123456 -keypass 123456 -dname "CN=RestAPI, OU=Development, O=OpenSource, L=City, ST=State, C=Country" -validity 3650
      - name: Execute integration test via Maven
        run: mvn -B verify --file restAPI/pom.xml -Dgroups=integration -Djacoco.skip=true


  buildAPI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Verify POM file
        run: test -f restAPI/pom.xml || { echo "POM file missing in restAPI"; exit 1; }
      - name: Build with Maven
        run: mvn -B package --file restAPI/pom.xml

        
      - name: Upload dependency graph for GitHub Insights
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
        with:
          directory: restAPI
          correlator: ${{ github.job }}-${{ matrix.directory }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: restapi-artifacts
          path: restAPI/target/*.jar
          retention-days: 10


  sonarqube:
    name: SonarQube
    needs: buildAPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: restapi-artifacts
          path: restAPI/target
      - name: List target directory for debugging
        run: ls -lR restAPI/target
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=Patrick112233_Ro-Co
            -Dsonar.organization=patrick112233
            -Dsonar.java.binaries=restAPI/target

  buildFrontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present

  testFrontend:
    needs: buildFrontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run coverage