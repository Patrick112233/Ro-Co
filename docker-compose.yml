
services:

  frontend:
    build: ./frontend/.
    ports:
      - "3000:3000"
    links:
      - backend
    depends_on:
      - backend

  testbox:
    image: alpine
    command: tail -f /dev/null
    depends_on:
      - backend

  backend:
    build: ./restAPI/.
    ports:
      - "8080:8080"
    environment:
      - STOREPASS=123456
      - KEYPASS=123456
      - CORS_ORIGIN_ALLOWED=http://localhost:3000
      - MONGO_INITDB_ROOT_PASSWORD=zIp3A89zA6YE5psB9YjeB
      - MONGO_INITDB_ROOT_USERNAME=backend
      - MONGO_INITDB_HOST=mongo
      - MONGO_INITDB_PORT=27017
    links:
      - mongo
    depends_on:
      mongo:
        condition: service_healthy

  mongo:
    image: mongo:6.0.21
    restart: always
    ports:
      - "27017:27017"
    command: mongod --quiet --logpath /dev/null 
    environment:
      - MONGO_INITDB_ROOT_PASSWORD=zIp3A89zA6YE5psB9YjeB
      - MONGO_INITDB_ROOT_USERNAME=backend
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - db-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

#  mongo-express:
#    image: mongo-express
#    restart: always
#    ports:
#      - "8082:8081"
#    env_file:
#      - config_own.env

volumes:
  db-data:
